on:
  workflow_call:
    inputs:
      release:
        required: false
        default: false
        type: boolean
    secrets:
      deploy-host:
        required: false
      deploy-user:
        required: false
      deploy-key:
        required: false

jobs:
  build:
    name: 'Build Portable FFmpeg'
    runs-on: ${{ matrix.os.name }}
    strategy:
      fail-fast: true
      matrix:
        # Currently, macOS 12 is x86 exclusive and macOS 14 is arm exclusive and we have no other way to specify arch
        os:
          - name: macos-12
            arch: x86_64
          - name: macos-14
            arch: arm64
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Prepare prefix dir
        run: |
          sudo mkdir /opt/ffbuild
          sudo chmod 777 /opt/ffbuild

      - name: Build Portable
        run: ./builder/buildmac.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: mac-${{ matrix.os.arch }}-portable
          path: ./builder/artifacts

  publish:
    name: Publish Portable Release
    if: ${{ inputs.release }}
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      fail-fast: true
      matrix:
        arch: [arm64, x86_64]

    steps:
      - name: Set Versions
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: set_version
        with:
          script: |
            const tag = context.ref.substring(10)
            const no_v = tag.replace('v', '')
            const dash_index = no_v.lastIndexOf('-')
            const major_index = no_v.indexOf('.')
            const no_dash = (dash_index > -1) ?  no_v.substring(0, dash_index) : no_v
            const major = (major_index > -1) ?  no_v.substring(0, major_index) : no_v
            core.setOutput('tag', tag)
            core.setOutput('no-v', no_v)
            core.setOutput('no-dash', no_dash)
            core.setOutput('major', major)

      - name: Download Artifacts
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          name: mac-${{ matrix.arch }}-portable
          path: artifact

      - name: Upload GH Release Assets
        uses: shogo82148/actions-upload-release-asset@5bd52f05dd8076794da5975d4c0a4f3bce7dd8f5 # v1.7.4
        with:
          upload_url: ${{ github.event.release.upload_url }}
          overwrite: true
          asset_path: |
            ./artifact/**/*.tar.xz

      - name: Upload release archive to repo.jellyfin.org
        uses: appleboy/scp-action@917f8b81dfc1ccd331fef9e2d61bdc6c8be94634 # v0.1.7
        with:
          host: ${{ secrets.deploy-host }}
          username: ${{ secrets.deploy-user }}
          key: ${{ secrets.deploy-key }}
          source: artifact/*
          strip_components: 1
          target: /srv/incoming/ffmpeg/${{ steps.set_version.outputs.no-v }}/macos/${{ matrix.arch }}

      - name: Move incoming release into repository
        uses: appleboy/ssh-action@029f5b4aeeeb58fdfe1410a5d17f967dacf36262 # v1.0.3
        with:
          host: ${{ secrets.deploy-host }}
          username: ${{ secrets.deploy-user }}
          key: ${{ secrets.deploy-key }}
          envs: JELLYFIN_VERSION
          script_stop: true
          script: |
            if [ -d "/srv/repository/main/ffmpeg/${{ inputs.distro }}/${{ steps.set_version.outputs.major }}.x/${{ steps.set_version.outputs.no-v }}/${{ matrix.arch }}" ] && [ -n "${{ steps.set_version.outputs.major }}" ] && [ -n "${{ steps.set_version.outputs.no-v }}" ]; then
                # Clean up existing folders for this arch, if rebuilt
                sudo rm -r /srv/repository/main/ffmpeg/macos/${{ steps.set_version.outputs.major }}.x/${{ steps.set_version.outputs.no-v }}/${{ matrix.arch }}
            fi
            # Create the target folder and move arch directory into it
            sudo mkdir -p /srv/repository/main/ffmpeg/macos/${{ steps.set_version.outputs.major }}.x/${{ steps.set_version.outputs.no-v }}
            sudo mv -t /srv/repository/main/ffmpeg/macos/${{ steps.set_version.outputs.major }}.x/${{ steps.set_version.outputs.no-v }}/ /srv/incoming/ffmpeg/${{ steps.set_version.outputs.no-v }}/macos/${{ matrix.arch }}
            sudo chown -R root:root /srv/repository/main/ffmpeg/macos/${{ steps.set_version.outputs.major }}.x/${{ steps.set_version.outputs.no-v }}
            # Update symlink for latest-X.x
            sudo rm -f /srv/repository/main/ffmpeg/macos/latest-${{ steps.set_version.outputs.major }}.x || true
            sudo ln -s /srv/repository/main/ffmpeg/macos/${{ steps.set_version.outputs.major }}.x/${{ steps.set_version.outputs.no-v }} /srv/repository/main/ffmpeg/macos/latest-${{ steps.set_version.outputs.major }}.x || true
